// assets/scss/_custom.scss

// --- SCSS for Title and Inline Subtitle ---

// 主标题 h1 的样式 (它可能已经从 .article-hero-heading 继承了大部分样式)
.main-title-with-inline-subtitle {
    // 如果 h1 有默认的 margin-bottom, 并且你希望它和下面的作者信息有特定间距，
    // 可以在这里调整，或者通过其父元素 header 控制。
    // 例如: margin-bottom: 0.5rem;
    // 我们不需要在这里设置 display: flex 或 inline，因为 h1 默认是块级，
    // 而内部的 span 会自然地跟随文本流。
}

// 行内副标题 span 的样式
.inline-subtitle-text {
    font-size: 0.7em;   // 让副标题比主标题小一点，例如主标题的 85%
                         // 您需要根据主标题的实际大小来调整这个比例，以达到视觉和谐
    font-weight: normal; // 通常副标题不加粗
    color: #555555;     // 一个中度灰色，请替换为您期望的灰色值或 var(--grey)
    margin-left: 0.5em;  // 在主标题文本和副标题文本之间添加一个小的左边距
                         // 这个间距是文字之间的，不是块之间的。您可以调整或设为0以完全紧贴。
    // 如果需要，可以调整垂直对齐，但通常作为行内元素，它们会基于基线对齐
    // vertical-align: baseline; // 通常是默认行为
}

.article-hero-subtitle { // 包裹 .article-meta 的容器
    margin-top: 0; // 确保它和标题之间的间距由标题的 margin-bottom 控制
    // 我们不需要在这里设置 margin-bottom，因为 .article-meta 的 padding-bottom 会起作用
}

.article-meta { // 包裹作者信息的容器
    // 主题样式已经给了它 padding-top: 10px; padding-bottom: 10px;
    // 并且 margin-top: 0; margin-bottom: 0;
    // 我们不需要在这里额外添加样式，除非想覆盖它的 padding
}

.course-description-frontmatter-custom { // 课程描述的 <p> 标签
    // ... (已有的字体、颜色等样式) ...
    // 移除之前的内联样式 margin-top: 0.5rem; (在 HTML 中移除)
    margin-top: 25px; // <--- 设置为 15px，这样 15px (margin-top) + 10px (article-meta的padding-bottom) = 25px
    font-size: 0.9em; // 保持或调整
    color: var(--grey); // 保持或调整
}

.article-hero-image { // 或者 #CourseImage__Hero 如果想用ID选择器
    // margin-left: auto; // 如果想让它在父容器内右对齐 (如果父容器比它宽)
    // margin-right: auto; // 和上面配合可以实现居中 (如果父容器比它宽)
    margin-left: 40px;  // <--- 尝试一个值，例如向右移动 20px
    // 或者使用百分比: margin-left: 5%;

    // 同时，确保它不是 width: 100% 充满了父容器，否则 margin-left 可能没效果
    // 如果它的父容器（比如 .article-hero）有 padding-left，图片也会被推向右边。
}

.course-hero-image {
    position: relative !important;
    margin-top: 2rem;
    margin-bottom: 15.5rem;
    margin-left: 7.1%;  // 向右移动 5%
    width: 90%;       // 保持宽度为 90%，确保有足够的边距
    max-width: 944px; // 保持最大宽度限制
    margin-right: auto; // 确保右边距自动调整
}

// assets/scss/_custom.scss (或 assets/css/custom.css)

// ... (可能还有之前为主副标题同行的 Flexbox 样式) ...

.chapter-content-header {
    // 原有的样式，例如：
    // margin-bottom: 2rem; (可以保留或调整)
    // padding-bottom: 1rem; (可以保留或调整)
    // border-bottom: 1px solid #eee; (可以保留或调整)

    // 新增：让标题和描述整体下移
    padding-top: 7.5rem; // 示例值，您可以根据需要调整这个数值，例如 1rem, 30px, 2.5em 等
    // 或者，如果您更想用 margin-top:
    // margin-top: 2rem;

    // 新增：向右移动标题
    margin-left: 40px; // 向右移动 40px

    @media screen and (max-width: 768px) {
        margin-left: 20px; // 在移动设备上减小右边距
    }
}

.chapter-main-title {
    // 如果需要，为主标题添加特定样式
    // font-size: 2.2em; // 示例
    // margin-bottom: 0.5rem; // 与描述的间距
}

.chapter-page-description {
    font-size: 1em; // 或者您期望的大小，例如 16px
    color: var(--grey, #555); // 使用主题变量或指定颜色
    margin-top: 0.5rem; // 与标题的间距 (如果标题没有 margin-bottom)
    margin-bottom: 7rem; // 与下方作者信息或正文的间距
    line-height: 1.6; // 调整行高以便阅读

    // 确保这些属性是默认值或您期望的值，以覆盖任何可能的继承
    display: block;
    overflow: visible;
    -webkit-line-clamp: unset;
    -webkit-box-orient: unset;
    text-overflow: clip;
}

.chapter-author-meta {
    font-size: 0.9em;
    color: var(--grey, #777);
    margin-top: 1rem; // 与描述的间距
}

.chapter-hero-image {
    // 如果需要为章节的 hero 图片添加特定样式
}

// 如果 heti 类没有提供足够的文章内容样式，可以在这里补充
.article-content-wrapper .post-content.heti {
    // 例如，调整段落间距、列表样式等
}

// assets/scss/_custom.scss (或 assets/css/custom.css)

// ... (其他自定义样式) ...

.chapter-content-header {
    // 原有的样式，例如：
    // margin-bottom: 2rem; (可以保留或调整)
    // padding-bottom: 1rem; (可以保留或调整)
    // border-bottom: 1px solid #eee; (可以保留或调整)

    // 新增：让标题和描述整体下移
    padding-top: 7.5rem; // 示例值，您可以根据需要调整这个数值，例如 1rem, 30px, 2.5em 等
    // 或者，如果您更想用 margin-top:
    // margin-top: 2rem;
}

// 针对课程章节页的内容区域进行样式统一
.article-content-wrapper { // 这是我们章节页 <article> 的父级 <section> 的类
    // 如果需要，可以在这里调整 section 的 padding，
    // 但我们主要关注 .post-content 的样式

    // 确保 .post-content.heti 内部没有不必要的 padding
    .post-content.heti,
    .post-content.heti.article-content { // 兼容步骤1中可能添加的类
        padding-top: 0 !important;    // 覆盖掉那巨大的 160px padding-top
        padding-bottom: 0 !important; // 覆盖掉 35px padding-bottom

        // 统一字体、大小、行高、最大宽度，使其与文章页一致
        // (根据您文章页的截图，我们使用这些值作为目标)
        font-family: "lxgw neo zhisong", "LXGW WenKai", "LXGW Neo ZhiSong", "LXGW Bright", ZCOOL XiaoWei, var(--serif); // 优先使用霞鹜新致宋，并提供备选
        font-size: 18px !important;       // 强制与文章页一致
        line-height: 1.756 !important;    // (31.608px / 18px) 强制与文章页一致
        max-width: 800px !important;      // 强制与文章页一致

        // 确保左右有合适的间距，使其居中 (如果 max-width 生效，auto margin会使其居中)
        // 主题的 .narrow 类或 .section 类可能已经处理了居中，但以防万一
        margin-left: auto;
        margin-right: auto;

        // 响应式布局
        @media screen and (max-width: 1024px) {
            max-width: 800px !important;
            padding-left: 10px !important;
            padding-right: 10px !important;
        }

        @media screen and (max-width: 768px) {
            max-width: 100% !important;
            padding-left: 0 !important;
            padding-right: 0 !important;
        }

        // 确保段落等元素有合适的上下间距 (Novela的heti类应该会处理一部分)
        p {
            // margin-bottom: 1em; // 示例
        }
    }
}

// 全局 heti 样式配置
.heti {
    // 基础样式
    font-family: "LXGW Neo ZhiSong", "ZSFT-332", var(--sanserif);
    font-size: 18px;
    line-height: 1.756;
    max-width: 800px;
    margin: 0 auto;

    // 响应式布局
    @media screen and (max-width: 1024px) {
        max-width: 800px;
        padding-left: 10px;
        padding-right: 10px;
    }

    @media screen and (max-width: 768px) {
        max-width: 100%;
        padding-left: 0;
        padding-right: 0;
        font-size: 17px;
        line-height: 1.7;
    }

    // 段落样式
    p {
        margin-bottom: 1.5em;
    }

    // 列表样式
    ul, ol {
        margin: 1em 0;
        padding-left: 1.5em;
    }

    // 引用样式
    blockquote {
        margin: 1.5em 0;
        padding-left: 1em;
        border-left: 4px solid var(--horizontalRule);
    }

    // 代码块样式
    pre {
        margin: 1.5em 0;
    }
}

// 课程目录链接样式
.chapters-list .chapter-link {
  text-decoration: none !important;
  color: var(--articleText) !important;
  transition: color 0.3s ease;

  .chapter-title,
  .chapter-excerpt,
  .chapter-metadata {
    color: inherit;
    transition: color 0.3s ease;
  }

  &:hover {
    text-decoration: none !important;
    color: var(--accent) !important;

    .chapter-title,
    .chapter-excerpt,
    .chapter-metadata {
      color: inherit;
    }
  }
}